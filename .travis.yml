sudo: required
os: osx
osx_image: xcode10.2
language: node_js
node_js: "10"
env:
  global:
    - PLATFORM_VERSION=12.2
    - _FORCE_LOGS=1
    - RECURSIVE=--recursive
    - MAX_PARALLEL=0
    - DEBUG=mocha-parallel-tests
jobs:
  include:
    - stage: tests
      name: Unit tests
      if: &noncron type != cron
      env:
        - TEST=unit
        - _FORCE_LOGS=0

    - stage:
      name: Basic functional tests
      if: *noncron
      env:
        - CI_METRICS=1
        - TEST=functional/basic

    - stage:
      name: Driver functional tests
      if: *noncron
      env:
        - TEST=functional/driver

    - stage:
      name: Web tests
      if: *noncron
      env:
        - CI_METRICS=1
        - TEST=functional/web

    - stage:
      name: Long tests
      if: *noncron
      env:
        - CI_METRICS=1
        - TEST=functional/long

    - stage:
      name: Smoke test on Xcode 10.1 web
      if: *noncron
      osx_image: xcode10.1
      env:
        - CI_METRICS=1
        - PLATFORM_VERSION=12.1
        - TEST=functional/web

    - stage:
      name: Smoke tests on xcode 9.4 web
      if: *noncron
      osx_image: xcode9.4
      env:
        - CI_METRICS=1
        - PLATFORM_VERSION=11.4
        - TEST=functional/web

    - stage: "[CRON] Upload Appium build to Sauce Storage"
      if: &cron type = cron
      os: linux
      env: CLOUD=1
      script: npx gulp sauce-storage-upload

    # Sauce Emusim tests
    - stage: "[CRON] Sauce Emusim tests"
      if: *cron
      os: linux
      name: Basic, device 0
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=0 TEST=functional/basic
    - stage:
      if: *cron
      os: linux
      name: Basic, device 1
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=1 TEST=functional/basic
    - stage:
      if: *cron
      os: linux
      name: Basic, device 2
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=2 TEST=functional/basic
    - stage:
      if: *cron
      os: linux
      name: Basic, device 3
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=3 TEST=functional/basic
    - stage:
      if: *cron
      os: linux
      name: Basic, device 4
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=4 TEST=functional/basic

    - stage:
      if: *cron
      os: linux
      name: Web, device 0
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=0 TEST=functional/web
      addons: &sc
        sauce_connect:
          no_ssl_bump_domains: localhost
    - stage:
      if: *cron
      os: linux
      name: Web, device 1
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=1 TEST=functional/web
      addons:
        *sc
    - stage:
      if: *cron
      os: linux
      name: Web, device 2
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=2 TEST=functional/web
      addons:
        *sc
    - stage:
      if: *cron
      os: linux
      name: Web, device 3
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=3 TEST=functional/web
      addons:
        *sc
    - stage:
      if: *cron
      os: linux
      name: Web, device 4
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=4 TEST=functional/web
      addons:
        *sc

    - stage:
      if: *cron
      os: linux
      name: Long, device 0
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=0 LONG=1 TEST=functional/long
    - stage:
      if: *cron
      os: linux
      name: Long, device 1
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=1 LONG=1 TEST=functional/long
    - stage:
      if: *cron
      os: linux
      name: Long, device 2
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=2 LONG=1 TEST=functional/long
    - stage:
      if: *cron
      os: linux
      name: Long, device 3
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=3 LONG=1 TEST=functional/long
    - stage:
      if: *cron
      os: linux
      name: Long, device 4
      env: CLOUD=1 SAUCE_EMUSIM_DEVICE_INDEX=4 LONG=1 TEST=functional/long
install:
  - npm --version
  - node --version
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      npm install;
      npm install --no-save mjpeg-consumer;

      pushd node_modules/appium-webdriveragent;
      carthage bootstrap --no-use-binaries;
      cp Cartfile.resolved Carthage;
      mkdir -p ./Resources/WebDriverAgent.bundle;
      popd;
    else
      npm install --production;
      npm install --no-save gulp appium-gulp-plugins chai chai-as-promised chai-subset wd unzip mocha@5 mocha-parallel-tests;
      npm install --no-save saucelabs;
      npx gulp fix-mocha-parallel-tests;
      npm run build;
      npx gulp periodic-output & export LONG_PID=$!;
    fi
script:
  - if [ -n "$CLOUD" ]; then
      npx mocha-parallel-tests --max-parallel $MAX_PARALLEL --debug -t 120000 --require build/test/env/env --recursive build/test/$TEST;
    else
      npm run lint && npx mocha -t 0 $RECURSIVE build/test/$TEST -g @skip-ci -i --exit;
    fi
after_script:
  - if [-n "$LONG_PID" ]; then
      kill $LONG_PID;
    fi
after_success:
  - if [ -n "$CI_METRICS" ]; then
      mkdir -p ./ci-metrics && ls -la ./ci-metrics;
      npm install -g appium-event-parser;
      appium-event-parser -s -i ./ci-metrics;
    fi
  - if [ ${COVERALLS} = "1" ]; then npm run coverage; fi
